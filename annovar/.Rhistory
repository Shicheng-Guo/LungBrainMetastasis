0.5/26.8
head(Object)
5/23
12/312
73*12
73*82
259-263
40/263
2595-2629
34/2629
130-116
14/130
135.8+1.4
171-133
38/133
172-133
39/133
92-69
23/69
9.6-6.5
3.1/6.5
10/29
3/136
24*1.15
92-76
16/76
1.03^7
0.67+0.28
0.95/10.37
599+30+20+30+100+400
599+30+20+30+100+400+10
symbol="000001.SZ"
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
tail(Object)
#量价均势位
#install.packages("quantmod")
#install.packages("TTR")
library(quantmod)
library(TTR)
myATR        <- function(x) ATR(HLC(x))[,'atr']
mySMI        <- function(x) SMI(HLC(x))[, "SMI"]
myADX        <- function(x) ADX(HLC(x))[,'ADX']
myAroon      <- function(x) aroon(cbind(Hi(x),Lo(x)))$oscillator
myBB         <- function(x) BBands(HLC(x))
myChaikinVol <- function(x) Delt(chaikinVolatility(cbind(Hi(x),Lo(x))))[, 1]
myEMA        <- function(x,n) EMA(HLC(x)[,3],n)
myEMV        <- function(x) EMV(cbind(Hi(x),Lo(x)),Vo(x))[,2]
myMACD       <- function(x) MACD(Cl(x),percent=F,nFast=12, nSlow=26, nSig=9)
myMFI        <- function(x) MFI(HLC(x), Vo(x))
mySAR        <- function(x) SAR(cbind(Hi(x),Cl(x))) [,1]
myCCI        <- function(x) CCI(x,n = 20, maType, c = 0.015)
myRSI        <- function(x) RSI(x[,4], n=2)
myVolat      <- function(x) volatility(OHLC(x),calc="garman")[,1]
CrossOver<-function(x,y,n=2){
return(tail(x,1)[1,1]>=tail(y,1)[1,1] && tail(x,n)[1,1]<=tail(y,n)[1,1])
}
symbol="000001.SZ"
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
tail(Object)
beginning <-"2017-07-01"
date<-"2017-08-30"
beginning <-"2016-10-11"
date<-"2016-12-11"
symbol="000001.SZ"
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
tail(Object)
symbol="BAC"
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
tail(Object)
symbol="600585.SH"
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
symbol="000050.SZ"
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
tail(Object)
beginning <- as.Date(Sys.Date()-10)
date<-Sys.Date()
symbol="000050.SZ"
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
head(Object)
symbol="603505.SH"
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
symbol="603799.SH"
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
symbol="603799.SH"
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
symbol="603799.SS"
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
try(Object<-getSymbols(Symbols=as.character(symbol),src="yahoo",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
head(Object)
3.2/2.8
57-49
8/49
76-91
15/76
3.9/3.5
12.38/13
12.38/15
2723/2756
91/68
68/91
139/105
36/24
44/29
2596*0.97
2596*0.97^2
2596*0.97^3
2596*0.97^4
2596*0.97^5
2596*0.97^6
93/65
172*1.1
157/150
156/150
259/255
3.12/2.8
256/253
1625/1371
(0.5x1+1/3x2+0x3+0.5x4)/10 = 0.12
(0.5x1+1/3x2+0x3+0.5x4)/10
0.5x1+2/3+0+0.5x4)/10
0.5x1+2/3+0+0.5x4)/10
0.5x1+2/3+0+0.5x4)/10
0.5x1+2/3+0+0.5x4)/10
0.5x1+2/3+0+0.5x4/10
0.5x1+1/3x2+0x3+0.5x4
0.5x1+1/3x2+0x3+0.5x4
0.5x1
0.5*1
0.5*1+1/3x2+0*3+0.5*4
0.5*1+1/3*2+0*3+0.5*4
0.5*1+2/3+0*3+0.5*4
(1/2*1+2/4+3/8+4/16)/10
(0.5*1+2/3+0*3+0*4)/10
141/128
82-64
18/64
116-77
39/77
53/2
53/26
#install.packages("quantmod")
#install.packages("TTR")
library(quantmod)
library(TTR)
myATR        <- function(x) ATR(HLC(x))[,'atr']
mySMI        <- function(x) SMI(HLC(x))[, "SMI"]
myADX        <- function(x) ADX(HLC(x))[,'ADX']
myAroon      <- function(x) aroon(cbind(Hi(x),Lo(x)))$oscillator
myBB         <- function(x) BBands(HLC(x))
myChaikinVol <- function(x) Delt(chaikinVolatility(cbind(Hi(x),Lo(x))))[, 1]
myEMA        <- function(x,n) EMA(HLC(x)[,3],n)
myEMV        <- function(x) EMV(cbind(Hi(x),Lo(x)),Vo(x))[,2]
myMACD       <- function(x) MACD(Cl(x),percent=F,nFast=12, nSlow=26, nSig=9)
myMFI        <- function(x) MFI(HLC(x), Vo(x))
mySAR        <- function(x) SAR(cbind(Hi(x),Cl(x))) [,1]
myVolat      <- function(x) volatility(OHLC(x),calc="garman")[,1]
myCCI        <- function(x) CCI(x,n = 20, maType, c = 0.015)
myRSI        <- function(x) RSI(x[,4], n=2)
CrossOver<-function(x,y,n=2){
return(tail(x,1)[1,1]>=tail(y,1)[1,1] && tail(x,n)[1,1]<=tail(y,n)[1,1])
}
beginning <- as.Date(Sys.Date()-90)
date<-Sys.Date()
## A Stock
#setwd("C:\\Users\\User\\Dropbox\\stock\\Astock")
#input<-read.table("Symbol.txt",sep="\t")
## US Stock
setwd("C:\\Users\\User\\Dropbox\\stock\\mystock")
input<-read.table("C:\\Users\\User\\Dropbox\\stock\\bak.db",sep="\t")
rlt<-c()
for(i in 1:nrow(input)){
symbol=as.character(input[i,1])
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
if(nrow(na.omit(Object))<300) next
if(any(is.na(tail(Object,1)[1,1:3]))) next
if((tail(Object,1)[1,5])<50000) next
if((tail(Object,1)[1,1])>50) next
if((tail(Object,1)[1,1])<1) next
myEMAD5<-myEMA(na.omit(Object),n=5)
myEMAD10<-myEMA(na.omit(Object),n=10)
myEMAD20<-myEMA(na.omit(Object),n=20)
myEMAD30<-myEMA(na.omit(Object),n=30)
myEMAD60<-myEMA(na.omit(Object),n=60)
myEMAD120<-myEMA(na.omit(Object),n=120)
myEMAD200<-myEMA(na.omit(Object),n=200)
#myEMAD200<-myEMA(na.omit(Object),n=200)
#if(tail(Object,1)[1,4]<tail(myEMAD200,1)[1,1]) next
head(Object)
#if(tail(Object,1)[1,4]<tail(myEMAD120,1)[1,1]) next
#if(tail(Object,1)[1,4]<tail(myEMAD120,1)[1,1]) next
#if(tail(Object,1)[1,4]<tail(myEMAD60,1)[1,1]) next
#if(! all(tail(myEMAD5,10)[,1]>tail(myEMAD10,10)[,1])) next
#if(! all(tail(myEMAD10,10)[,1]>tail(myEMAD30,10)[,1])) next
#if(! all(tail(myEMAD30,10)[,1]>tail(myEMAD60,10)[,1])) next
#BBobject<-myBB(na.omit(Object))
#if(mean(tail(BBobject,2)[,3]-tail(BBobject,2)[,1])/mean(tail(BBobject,30)[,3]-tail(BBobject,30)[,1])<1.05) next
#if(! tail(myEMAD5,1)[1,1]>=tail(myEMAD10,1)[1,1] && tail(myEMAD5,5)[1,1]<=tail(myEMAD10,5)[1,1]) next
#if(mean(tail(BBobject,2)[,3]-tail(BBobject,2)[,1])/mean(tail(BBobject,30)[,3]-tail(BBobject,30)[,1])>1.20) next
#if(! tail(myEMAD10,1)[1,1]>=tail(myEMAD20,1)[1,1] && tail(myEMAD10,5)[1,1]<=tail(myEMAD20,5)[1,1]) next
#if( ! (CrossOver(myEMAD5,myEMAD20) && CrossOver(myEMAD10,myEMAD20) && CrossOver(myEMAD20,myEMAD60))) next
#if(CrossOver(myEMAD5,myEMAD20)) rlt<-rbind(rlt,c(symbol,"5cross20"))
#if(CrossOver(myEMAD5,myEMAD30)) rlt<-rbind(rlt,c(symbol,"5cros30"))
min=tail(Object,1)[1,3]
close=tail(Object,1)[1,4]
con1= as.numeric(min) < as.numeric(myEMAD5[nrow(myEMAD5),1])
con2= as.numeric(min) < as.numeric(myEMAD10[nrow(myEMAD10),1])
con3= as.numeric(min) < as.numeric(myEMAD20[nrow(myEMAD20),1])
con4= as.numeric(min) < as.numeric(myEMAD30[nrow(myEMAD30),1])
con5= as.numeric(min) < as.numeric(myEMAD60[nrow(myEMAD60),1])
con11= as.numeric(min) > as.numeric(myEMAD120[nrow(myEMAD200),1])
con6= as.numeric(close) > as.numeric(myEMAD5[nrow(myEMAD5),1])
con7= as.numeric(close) > as.numeric(myEMAD10[nrow(myEMAD10),1])
con8= as.numeric(close) > as.numeric(myEMAD20[nrow(myEMAD20),1])
con9= as.numeric(close) > as.numeric(myEMAD30[nrow(myEMAD30),1])
con10= as.numeric(close) > as.numeric(myEMAD60[nrow(myEMAD60),1])
con12= as.numeric(close) > as.numeric(myEMAD120[nrow(myEMAD200),1])
if(con1 && con2 && con3 && con4 && con5 && con6 && con7 && con8 && con9 && con10 && con11 && con12){
print(c(i,symbol,tail(Object,2)[1,4],tail(Object,2)[2,4]))
}
}
## US Stock
setwd("C:\\Users\\User\\Dropbox\\stock\\mystock")
input<-read.table("C:\\Users\\User\\Dropbox\\stock\\bak.db",sep="\t")
input<-read.table("C:\\Users\\shg047\\Dropbox\\stock\\bak.db",sep="\t")
#install.packages("quantmod")
#install.packages("TTR")
library(quantmod)
library(TTR)
myATR        <- function(x) ATR(HLC(x))[,'atr']
mySMI        <- function(x) SMI(HLC(x))[, "SMI"]
myADX        <- function(x) ADX(HLC(x))[,'ADX']
myAroon      <- function(x) aroon(cbind(Hi(x),Lo(x)))$oscillator
myBB         <- function(x) BBands(HLC(x))
myChaikinVol <- function(x) Delt(chaikinVolatility(cbind(Hi(x),Lo(x))))[, 1]
myEMA        <- function(x,n) EMA(HLC(x)[,3],n)
myEMV        <- function(x) EMV(cbind(Hi(x),Lo(x)),Vo(x))[,2]
myMACD       <- function(x) MACD(Cl(x),percent=F,nFast=12, nSlow=26, nSig=9)
myMFI        <- function(x) MFI(HLC(x), Vo(x))
mySAR        <- function(x) SAR(cbind(Hi(x),Cl(x))) [,1]
myVolat      <- function(x) volatility(OHLC(x),calc="garman")[,1]
myCCI        <- function(x) CCI(x,n = 20, maType, c = 0.015)
myRSI        <- function(x) RSI(x[,4], n=2)
CrossOver<-function(x,y,n=2){
return(tail(x,1)[1,1]>=tail(y,1)[1,1] && tail(x,n)[1,1]<=tail(y,n)[1,1])
}
beginning <- as.Date(Sys.Date()-90)
date<-Sys.Date()
## A Stock
#setwd("C:\\Users\\User\\Dropbox\\stock\\Astock")
#input<-read.table("Symbol.txt",sep="\t")
## US Stock
input<-read.table("C:\\Users\\shg047\\Dropbox\\stock\\bak.db",sep="\t")
rlt<-c()
for(i in 1:nrow(input)){
symbol=as.character(input[i,1])
try(Object<-getSymbols(Symbols=as.character(symbol),src="google",env=NULL,from=beginning,to=date,auto.assign=FALSE),silent = T)
if(nrow(na.omit(Object))<300) next
if(any(is.na(tail(Object,1)[1,1:3]))) next
if((tail(Object,1)[1,5])<50000) next
if((tail(Object,1)[1,1])>50) next
if((tail(Object,1)[1,1])<1) next
myEMAD5<-myEMA(na.omit(Object),n=5)
myEMAD10<-myEMA(na.omit(Object),n=10)
myEMAD20<-myEMA(na.omit(Object),n=20)
myEMAD30<-myEMA(na.omit(Object),n=30)
myEMAD60<-myEMA(na.omit(Object),n=60)
myEMAD120<-myEMA(na.omit(Object),n=120)
myEMAD200<-myEMA(na.omit(Object),n=200)
#myEMAD200<-myEMA(na.omit(Object),n=200)
#if(tail(Object,1)[1,4]<tail(myEMAD200,1)[1,1]) next
head(Object)
#if(tail(Object,1)[1,4]<tail(myEMAD120,1)[1,1]) next
#if(tail(Object,1)[1,4]<tail(myEMAD120,1)[1,1]) next
#if(tail(Object,1)[1,4]<tail(myEMAD60,1)[1,1]) next
#if(! all(tail(myEMAD5,10)[,1]>tail(myEMAD10,10)[,1])) next
#if(! all(tail(myEMAD10,10)[,1]>tail(myEMAD30,10)[,1])) next
#if(! all(tail(myEMAD30,10)[,1]>tail(myEMAD60,10)[,1])) next
#BBobject<-myBB(na.omit(Object))
#if(mean(tail(BBobject,2)[,3]-tail(BBobject,2)[,1])/mean(tail(BBobject,30)[,3]-tail(BBobject,30)[,1])<1.05) next
#if(! tail(myEMAD5,1)[1,1]>=tail(myEMAD10,1)[1,1] && tail(myEMAD5,5)[1,1]<=tail(myEMAD10,5)[1,1]) next
#if(mean(tail(BBobject,2)[,3]-tail(BBobject,2)[,1])/mean(tail(BBobject,30)[,3]-tail(BBobject,30)[,1])>1.20) next
#if(! tail(myEMAD10,1)[1,1]>=tail(myEMAD20,1)[1,1] && tail(myEMAD10,5)[1,1]<=tail(myEMAD20,5)[1,1]) next
#if( ! (CrossOver(myEMAD5,myEMAD20) && CrossOver(myEMAD10,myEMAD20) && CrossOver(myEMAD20,myEMAD60))) next
#if(CrossOver(myEMAD5,myEMAD20)) rlt<-rbind(rlt,c(symbol,"5cross20"))
#if(CrossOver(myEMAD5,myEMAD30)) rlt<-rbind(rlt,c(symbol,"5cros30"))
min=tail(Object,1)[1,3]
close=tail(Object,1)[1,4]
con1= as.numeric(min) < as.numeric(myEMAD5[nrow(myEMAD5),1])
con2= as.numeric(min) < as.numeric(myEMAD10[nrow(myEMAD10),1])
con3= as.numeric(min) < as.numeric(myEMAD20[nrow(myEMAD20),1])
con4= as.numeric(min) < as.numeric(myEMAD30[nrow(myEMAD30),1])
con5= as.numeric(min) < as.numeric(myEMAD60[nrow(myEMAD60),1])
con11= as.numeric(min) > as.numeric(myEMAD120[nrow(myEMAD200),1])
con6= as.numeric(close) > as.numeric(myEMAD5[nrow(myEMAD5),1])
con7= as.numeric(close) > as.numeric(myEMAD10[nrow(myEMAD10),1])
con8= as.numeric(close) > as.numeric(myEMAD20[nrow(myEMAD20),1])
con9= as.numeric(close) > as.numeric(myEMAD30[nrow(myEMAD30),1])
con10= as.numeric(close) > as.numeric(myEMAD60[nrow(myEMAD60),1])
con12= as.numeric(close) > as.numeric(myEMAD120[nrow(myEMAD200),1])
if(con1 && con2 && con3 && con4 && con5 && con6 && con7 && con8 && con9 && con10 && con11 && con12){
print(c(i,symbol,tail(Object,2)[1,4],tail(Object,2)[2,4]))
}
}
286/254
179*2
290*1.2
287-350
63/287
19.21-8.6
10.61/19.21
19.21-8.6
31.73-17.17
31.73-16.88
450M
78/72.3
6.56*0.76
#量价均势位
#install.packages("quantmod")
#install.packages("TTR")
library(quantmod)
library(TTR)
myATR        <- function(x) ATR(HLC(x))[,'atr']
mySMI        <- function(x) SMI(HLC(x))[, "SMI"]
myADX        <- function(x) ADX(HLC(x))[,'ADX']
myAroon      <- function(x) aroon(cbind(Hi(x),Lo(x)))$oscillator
myBB         <- function(x) BBands(HLC(x))
myChaikinVol <- function(x) Delt(chaikinVolatility(cbind(Hi(x),Lo(x))))[, 1]
myEMA        <- function(x,n) EMA(HLC(x)[,3],n)
myEMV        <- function(x) EMV(cbind(Hi(x),Lo(x)),Vo(x))[,2]
myMACD       <- function(x) MACD(Cl(x),percent=F,nFast=12, nSlow=26, nSig=9)
myMFI        <- function(x) MFI(HLC(x), Vo(x))
mySAR        <- function(x) SAR(cbind(Hi(x),Cl(x))) [,1]
myVolat      <- function(x) volatility(OHLC(x),calc="garman")[,1]
myCCI        <- function(x) CCI(x,n = 20, maType, c = 0.015)
myRSI        <- function(x) RSI(x[,4], n=2)
CrossOver<-function(x,y,n=2){
return(tail(x,1)[1,1]>=tail(y,1)[1,1] && tail(x,n)[1,1]<=tail(y,n)[1,1])
}
beginning <- as.Date(Sys.Date()-450)
date<-Sys.Date()
#setwd("/home/sguo/Dropbox/stock/mystock")
input<-read.table("bak.db",sep="\t")
input<-read.table("bak2.txt",sep="\t")
#setwd("C:\\Users\\shg047\\Dropbox\\stock\\mystock")
76650517*271
348*286
46*171
5.7*242
24282/2
24282/2.1
24282/2.2
24282/2.
24282/2.3
1/2.3
200/2733
0.25*1.2
1.3*0.25
1.25*0.2
0.25/0.2
1053*2+500
2400*6
0.2/2
0.5/2
130+18+24+25+30+10+120+18+24+25+30
47000/2000
470000/2000
520000/235
75000/200
96*96
500*384
10000/384
26*384
26*750
750*30
22500+30000+12300+12000
5000*384
750*30
0.15*30
6000*40
35785/36090
96*2
? gsub
gsub(".gz","",sam$file_name)
library("sigfit")
cosmic_signatures
data("cosmic_signatures", package = "sigfit")
cosmic_signatures
set.seed(1)
probs <- c(0.4, 0.3, 0.2, 0.1) %*% as.matrix(cosmic_signatures[c(1, 3, 7, 11), ])
mutations <- matrix(rmultinom(1, 20000, probs), nrow = 1)
mutations[1:5,1:5]
mutations[1:2,1:2]
head(mutations)
colnames(mutations) <- colnames(cosmic_signatures)
mutations
if (!require("BiocManager"))
install.packages("BiocManager")
BiocManager::install("maftools")
if (!require("BiocManager"))
install.packages("BiocManager")
library("ggplot2")
library("sigfit")
library("devtools")
install_github("kgori/sigfit", args = "--preclean", build_vignettes = TRUE)
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.6/processx_3.3.1.zip", repos = NULL)
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.6/callr_3.2.0.zip", repos = NULL)
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.6/processx_3.3.1.zip", repos = NULL)
library("devtools")
# install.packages("BiocManager")
# BiocManager::install("maftools")
# BiocManager::install("digest")
# BiocManager::install("BiocParallel")
# install.packages("callr")
install.packages("processx")
# install.packages("BiocManager")
# BiocManager::install("maftools")
# BiocManager::install("digest")
# BiocManager::install("BiocParallel")
install.packages("callr")
library("devtools")
install_github("kgori/sigfit", args = "--preclean", build_vignettes = TRUE)
install.packages("survminer")
setwd("//mcrfnas2/bigdata/Genetic/Projects/shg047/project/LungBrainMetastasis")
BiocManager::install("ReactomePA")
library("ReactomePA")
setwd("C:\\Users\\shg047\\Documents\\GitHub\\LungBrainMetastasis\\annovar")
getwd()
list.fi勒索（）
list.files()
library("maftools")
### Lung
annovar<-list.files(pattern="*_T1.hg19_multianno.txt")
laml<-annovarToMaf(annovar=annovar, Center = NULL, refBuild = "hg19",
tsbCol = NULL, table = "refGene", basename = NULL, sep = "\t",
MAFobj = T, sampleAnno = NULL)
getGeneSummary(laml)
getGeneSummary(laml)$Hugo_Symbol
